version: '3.8'
services:
  monitoring-mimir:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir/config.yaml"]
    volumes:
      - ./monitoring/mimir:/etc/mimir
      - mimir-data:/data
    ports:
      - "9009:9009"
    networks:
      - monitoring-network
      - database-network
      - queue-network
      - mail-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9009/ready"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G

  monitoring-loki:
    image: grafana/loki:latest
    command: ["-config.file=/etc/loki/config.yaml"]
    volumes:
      - ./monitoring/loki:/etc/loki
      - loki-data:/data
    ports:
      - "3100:3100"
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G

  monitoring-tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo/config.yaml"]
    volumes:
      - ./monitoring/tempo:/etc/tempo
      - tempo-data:/data
    ports:
      - "3200:3200"     # tempo
      - "4317:4317"     # otlp grpc
      - "4318:4318"     # otlp http
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:3200/ready"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G

  monitoring-grafana:
    image: grafana/grafana:latest
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_FEATURE_TOGGLES_ENABLE: tempoSearch tempoBackendSearch
    ports:
      - "3000:3000"
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

  monitoring-otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector/config.yaml"]
    volumes:
      - ./monitoring/otel-collector:/etc/otel-collector
    ports:
      - "4317:4317"     # OTLP gRPC receiver
      - "4318:4318"     # OTLP HTTP receiver
      - "8888:8888"     # Prometheus metrics
      - "8889:8889"     # Health check
      - "13133:13133"   # Health check endpoint
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=environment=development,deployment.environment=local
      - OTEL_SERVICE_NAME=otel-collector
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://monitoring-tempo:4317
      - OTEL_METRICS_EXPORTER=prometheus
      - OTEL_LOGS_EXPORTER=loki
    networks:
      - monitoring-network
      - database-network
      - queue-network
      - mail-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:13133"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

networks:
  monitoring-network:
    driver: bridge

volumes:
  mimir-data:
  loki-data:
  tempo-data:
  grafana-data: 